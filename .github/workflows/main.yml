name: Run API autotests

on: 
  # schedule:
  #   - cron: "00 3 * * 1-5"
  workflow_dispatch:
    inputs:
      fish:
        description: 'Target Fish; must be defined in the source config'
        required: true
        type: string
        default: 'swordfish'
      tenant:
        description: 'Target tenant'
        required: true
        type: string
        default: 'ibm'
      employee:
        description: 'Select employee'
        required: true
        default: 'Corp'
        type: choice
        options:
          - Corp
          - Corp_2
      environment:
        description: 'Select environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod
      slackchannel:
        description: 'Select Slack Channel'
        required: true
        default: 'regular'
        type: choice
        options:
         - regular
         - test
      pr_number:
        description: 'Pull request number'
        required: false
        type: string

env:
  FAMILY: Autotests-containers
  CONTAINER: Auto-container
  PROJECT_NAME: api-auto
  SLACK_CHANNEL_ID: 123
  REGION: 'Some'
  SECURITY_GROUP: 'Some'
  SUBNET: 'Some'
  CLUSTER: 'Some'
  FISH: ${{ inputs.fish == '' && 'swordfish' || inputs.fish }}
  TEN: ${{ inputs.tenant == '' && 'ibm' || inputs.tenant }}
  EMPLOYEE: ${{ inputs.employee == '' && 'Corp' || inputs.employee }}
  ENVIRONMENT: ${{ inputs.environment == '' && 'dev' || inputs.environment }}
  COVERAGE: true
  REGULAR_SLACK_CHANNEL: '1'
  INTERNAL_SLACK_CHANNEL: '2'
  PR_SLACK_CHANNEL: '3'
  # SLACK_CHANNEL_ID: ${{ (inputs.slackchannel == 'regular' || inputs.slackchannel == '' ) && 'C06STJLB622' || 'C08JVLD6GN8' }}
  # SLACK_CHANNEL_ID: ${{ (inputs.pr_number != '' && 'new_channel_id') || (inputs.slackchannel == 'regular' || inputs.slackchannel == '' ) && 'C06STJLB622' || inputs.slackchannel == 'test' && 'C08JVLD6GN8' || 'C06STJLB622' }}
  TARGET_SLACK_CHANNEL_ID: ${{ (inputs.pr_number != '' && 'GA') || (inputs.slackchannel == 'regular' || inputs.slackchannel == '' ) && 'C06STJLB622' || 'C08JVLD6GN8' }}
  # TEST_LOGIC: ${{ (inputs.pr_number != '' && ${{ env.REGULAR_SLACK_CHANNEL }}) || (inputs.slackchannel == 'regular' || inputs.slackchannel == '' ) && ${{ env.INTERNAL_SLACK_CHANNEL }} || ${{ env.PR_SLACK_CHANNEL }} }}


      
# Run API autotests 'dev' (preblr [wfmdl2]) by schedule
run-name: "Run API autotests '${{ inputs.environment == '' && 'dev' || inputs.environment }}' (${{ inputs.fish == '' && 'swordfish' || inputs.fish }} [${{ inputs.tenant == '' && 'ibm' || inputs.tenant }}]) by ${{ github.event_name }}"
# run-name: "Run API autotests and publish in: ${{ env.TARGET_SLACK_CHANNEL_ID }}"

jobs:
  build:
    # name: Build and run tests
    runs-on: ubuntu-latest
    environment: AWS-yf-ops-automation
    timeout-minutes: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Print echo
      # run: echo "${{ github.event_name == 'schedule' && '*Daily Test Run finished.*' || '*Manual Test Run finished* ${{ inputs.pr_number != '' && format('PR #{0}', inputs.pr_number) }}' }}"
      run: echo "${{ github.event_name == 'schedule' && '*Daily Test Run finished.*' || '*Manual Test Run finished*'}} ${{ inputs.pr_number != '' && format('PR #{0}', inputs.pr_number }}"

# run-name: "Run API autotests '${{ inputs.environment == '' && 'dev' || inputs.environment }}' (${{ inputs.fish == '' && 'swordfish' || inputs.fish }} [${{ inputs.tenant == '' && 'ibm' || inputs.tenant }}]) by ${{ github.event_name }} ${{ inputs.pr_number && format('PR #{0}', inputs.pr_number) || '' }} ${{ inputs.repository && format('from {0}', inputs.repository) || '' }}"

