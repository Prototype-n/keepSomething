name: Run API autotests

on: 
  schedule:
    - cron: "00 3 * * 1-5"
  workflow_dispatch:
    inputs:
      fish:
        description: 'Target Fish; must be defined in the source config'
        required: true
        type: string
        default: 'swordfish'
      tenant:
        description: 'Target tenant'
        required: true
        type: string
        default: 'ibm'
      employee:
        description: 'Select employee'
        required: true
        default: 'Corp'
        type: choice
        options:
          - Corp
          - Corp_2
      environment:
        description: 'Select environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod

env:
  FAMILY: Autotests-containers
  CONTAINER: Auto-container
  PROJECT_NAME: api-auto
  SLACK_CHANNEL_ID: 123
  REGION: 'Some'
  SECURITY_GROUP: 'Some'
  SUBNET: 'Some'
  CLUSTER: 'Some'
  FISH: ${{ inputs.fish == '' && 'swordfish' || inputs.fish }}
  TEN: ${{ inputs.tenant == '' && 'ibm' || inputs.tenant }}
  EMPLOYEE: ${{ inputs.employee == '' && 'Corp' || inputs.employee }}
  ENVIRONMENT: ${{ inputs.environment == '' && 'dev' || inputs.environment }}
  COVERAGE: true
      
# Run API autotests 'dev' (preblr [wfmdl2]) by schedule
# run-name: "Run API autotests '${{ inputs.environment == '' && 'dev' || inputs.environment }}' (${{ inputs.fish == '' && 'swordfish' || inputs.fish }} [${{ inputs.tenant == '' && 'ibm' || inputs.tenant }}]) by ${{ github.event_name }}"
run-name: "Run API autotests '${{ env.ENVIRONMENT }}' (${{ env.FISH }} [${{ env.TEN }}]) by ${{ github.event_name }}"

jobs:
  build:
    # name: Build and run tests
    runs-on: ubuntu-latest
    environment: AWS-yf-ops-automation
    timeout-minutes: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
